name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  validate:
    name: Validate HTML and Links
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install HTML validator
      run: |
        npm install -g html-validate
        
    - name: Validate HTML files
      run: |
        echo "Validating HTML files..."
        find docs -name "*.html" -exec html-validate {} \; || true
        
    - name: Check for broken links (basic)
      run: |
        echo "Checking for basic link structure..."
        grep -r "href=" docs/ || true
        grep -r "src=" docs/ || true
        
    - name: Validate Jekyll config
      if: hashFiles('docs/_config.yml') != ''
      run: |
        echo "Jekyll config found, validating..."
        cat docs/_config.yml
        
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Ruby (for Jekyll)
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        working-directory: docs
        
    - name: Install Jekyll dependencies
      run: |
        cd docs
        gem install jekyll bundler
        bundle init --force
        echo 'gem "jekyll"' >> Gemfile
        echo 'gem "minima"' >> Gemfile
        bundle install
        
    - name: Build Jekyll site
      run: |
        cd docs
        bundle exec jekyll build --verbose
        
    - name: Test built site
      run: |
        echo "Testing built site structure..."
        ls -la docs/_site/ || echo "No _site directory found"
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run basic security checks
      run: |
        echo "Checking for sensitive information..."
        # Check for potential secrets or keys
        grep -r -i "api_key\|secret\|password\|token" docs/ || echo "No obvious secrets found"
        
        # Check for suspicious links
        grep -r "javascript:" docs/ || echo "No javascript: links found"
        
        echo "Security scan completed"
        
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: build-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Serve static files
      run: |
        cd docs
        python3 -m http.server 8080 &
        sleep 5
        
    - name: Run Lighthouse CI
      run: |
        lhci autorun || echo "Lighthouse scan completed with warnings"
      env:
        LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
        LHCI_BUILD_CONTEXT__COMMIT_TIME: ${{ github.event.head_commit.timestamp }}
        
  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [validate, build-test, security-scan]
    if: always()
    
    steps:
    - name: Check job results
      run: |
        echo "Validation result: ${{ needs.validate.result }}"
        echo "Build test result: ${{ needs.build-test.result }}"
        echo "Security scan result: ${{ needs.security-scan.result }}"
        
        if [[ "${{ needs.validate.result }}" == "success" && "${{ needs.build-test.result }}" == "success" && "${{ needs.security-scan.result }}" == "success" ]]; then
          echo "✅ All checks passed!"
        else
          echo "❌ Some checks failed. Please review the results."
        fi
